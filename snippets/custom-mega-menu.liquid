{% comment %}
  Mega menú 2 niveles con tabs horizontales (Opción B)
  - Bajo el top-level (p.ej. "Shop") aparece una barra de tabs: Season | Category | Brand | Collection.
  - Al pasar/click en cada tab se muestra el PANEL: lista lateral + 3 colecciones destacadas.
  - Cada panel se configura con bloques "Mega menu config" cuyo "trigger_label"
    coincide EXACTO con el texto del hijo (Season, Category, etc.).
{% endcomment %}

<nav class="header__inline-menu">
  <ul class="list-menu list-menu--inline" role="list">
    {%- for link in section.settings.menu.links -%}
      <li>
        {%- if link.links != blank -%}
          <header-menu>
            <details id="Details-HeaderMenu-{{ forloop.index }}" class="mega-menu">
              <summary
                id="HeaderMenu-{{ link.handle }}"
                class="header__menu-item list-menu__item link focus-inset"
              >
                <span{% if link.child_active %} class="header__active-menu-item"{% endif %}>
                  {{- link.title | escape -}}
                </span>
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </summary>

              <div
                id="MegaMenu-Content-{{ forloop.index }}"
                class="mega-menu__content color-{{ section.settings.menu_color_scheme }} gradient motion-reduce global-settings-popup"
                tabindex="-1"
              >
                <div class="page-width optionB__container">
                  {%- comment -%} ======= TABS HORIZONTALES (primer nivel) ======= {%- endcomment -%}
                  <nav class="optionB__tabs" aria-label="{{ link.title | escape }}">
                    <ul class="optionB__tabs-list" role="list">
                      {%- for childlink in link.links -%}
                        {%- liquid
                          assign cfg = nil
                          assign child_title_down = childlink.title | strip | downcase
                          for b in section.blocks
                            if b.type == 'mega_config'
                              assign b_down = b.settings.trigger_label | strip | downcase
                              if b_down == child_title_down
                                assign cfg = b
                                break
                              endif
                            endif
                          endfor
                          assign panel_id = 'mm-panel-' | append: forloop.parentloop.index | append: '-' | append: forloop.index
                        -%}
                        <li class="optionB__tabs-item">
                          <a
                            href="{{ childlink.url }}"
                            class="optionB__tabs-link header__menu-item list-menu__item link link--text focus-inset{% if forloop.first %} is-active{% endif %}"
                            data-panel="{{ panel_id }}"
                            data-has-panel="{% if cfg %}true{% else %}false{% endif %}"
                          >
                            {{ childlink.title }}
                          </a>
                        </li>
                      {%- endfor -%}
                    </ul>
                  </nav>

                  {%- comment -%} ======= PANELES (contenido del mega) ======= {%- endcomment -%}
                  <div class="optionB__panels">
                    {%- assign rendered_any_panel = false -%}
                    {%- for childlink in link.links -%}
                      {%- liquid
                        assign cfg = nil
                        assign child_title_down = childlink.title | strip | downcase
                        for b in section.blocks
                          if b.type == 'mega_config'
                            assign b_down = b.settings.trigger_label | strip | downcase
                            if b_down == child_title_down
                              assign cfg = b
                              break
                            endif
                          endif
                        endfor
                        assign panel_id = 'mm-panel-' | append: forloop.parentloop.index | append: '-' | append: forloop.index
                      -%}

                      {%- if cfg -%}
                        {%- assign rendered_any_panel = true -%}
                        <div class="optionB__panel{% if forloop.first %} is-active{% endif %}" id="{{ panel_id }}" role="region" aria-label="{{ childlink.title | escape }}">
                          <div class="megamenu-pb__grid">
                            {%- comment -%} LADO IZQ: Menú lateral configurable o fallback a nietos {%- endcomment -%}
                            <nav class="megamenu-pb__nav" aria-label="{{ cfg.settings.side_menu_label | default: childlink.title }}">
                              {%- if cfg.settings.side_menu != blank and linklists[cfg.settings.side_menu] -%}
                                <ul class="megamenu-pb__list" role="list">
                                  {%- for l in linklists[cfg.settings.side_menu].links -%}
                                    <li class="megamenu-pb__item">
                                      <a class="megamenu-pb__link header__menu-item list-menu__item link link--text focus-inset" href="{{ l.url }}">{{ l.title }}</a>
                                    </li>
                                  {%- endfor -%}
                                </ul>
                              {%- else -%}
                                <ul class="megamenu-pb__list" role="list">
                                  {%- if childlink.links != blank -%}
                                    {%- for gl in childlink.links -%}
                                      <li class="megamenu-pb__item">
                                        <a class="megamenu-pb__link header__menu-item list-menu__item link link--text focus-inset" href="{{ gl.url }}">{{ gl.title }}</a>
                                      </li>
                                    {%- endfor -%}
                                  {%- else -%}
                                    <li class="megamenu-pb__item">
                                      <a class="megamenu-pb__link header__menu-item list-menu__item link link--text focus-inset" href="{{ childlink.url }}">{{ childlink.title }}</a>
                                    </li>
                                  {%- endif -%}
                                </ul>
                              {%- endif -%}
                            </nav>

                            {%- comment -%} LADO DER: 3 colecciones destacadas (fix sin push) {%- endcomment -%}
                            <div class="megamenu-pb__featured">
                              {%- assign featured_handles = '' -%}
                              {%- if cfg.settings.collection_1 != blank -%}{%- assign featured_handles = featured_handles | append: cfg.settings.collection_1 | append: ',' -%}{%- endif -%}
                              {%- if cfg.settings.collection_2 != blank -%}{%- assign featured_handles = featured_handles | append: cfg.settings.collection_2 | append: ',' -%}{%- endif -%}
                              {%- if cfg.settings.collection_3 != blank -%}{%- assign featured_handles = featured_handles | append: cfg.settings.collection_3 | append: ',' -%}{%- endif -%}
                              {%- assign featured_array = featured_handles | split: ',' -%}

                              {%- for handle in featured_array -%}
                                {%- if handle != blank -%}
                                  {%- assign c = collections[handle] -%}
                                  {%- if c -%}
                                    <a class="megamenu-pb__card" href="{{ c.url }}">
                                      <div class="megamenu-pb__image-wrap">
                                        {%- if c.image -%}
                                          {{ c.image | image_url: width: 920 | image_tag:
                                            loading: 'lazy',
                                            sizes: '(min-width: 990px) 30vw, 90vw',
                                            widths: '360,540,720,900',
                                            alt: c.title | escape }}
                                        {%- else -%}
                                          {%- assign fp = c.products | first -%}
                                          {%- if fp and fp.featured_image -%}
                                            {{ fp.featured_image | image_url: width: 920 | image_tag:
                                              loading: 'lazy',
                                              sizes: '(min-width: 990px) 30vw, 90vw',
                                              widths: '360,540,720,900',
                                              alt: c.title | escape }}
                                          {%- else -%}
                                            <div class="megamenu-pb__image-placeholder" aria-hidden="true"></div>
                                          {%- endif -%}
                                        {%- endif -%}
                                      </div>
                                      <span class="megamenu-pb__title">{{ c.title }}</span>
                                    </a>
                                  {%- endif -%}
                                {%- endif -%}
                              {%- endfor -%}
                            </div>
                          </div>
                        </div>
                      {%- endif -%}
                    {%- endfor -%}

                    {%- unless rendered_any_panel -%}
                      {%- comment -%} Si ningún hijo tiene bloque configurado, cae al layout Dawn por defecto {%- endcomment -%}
                      <ul class="mega-menu__list{% if link.levels == 1 %} mega-menu__list--condensed{% endif %}" role="list">
                        {%- for childlink in link.links -%}
                          <li>
                            <a href="{{ childlink.url }}" class="mega-menu__link mega-menu__link--level-2 link">{{ childlink.title }}</a>
                            {%- if childlink.links != blank -%}
                              <ul class="list-unstyled" role="list">
                                {%- for gl in childlink.links -%}
                                  <li><a href="{{ gl.url }}" class="mega-menu__link link menu-drawer__menu-item link link--text list-menu__item">{{ gl.title }}</a></li>
                                {%- endfor -%}
                              </ul>
                            {%- endif -%}
                          </li>
                        {%- endfor -%}
                      </ul>
                    {%- endunless -%}
                  </div>
                </div>
              </div>
            </details>
          </header-menu>
        {%- else -%}
          <a
            id="HeaderMenu-{{ link.handle }}"
            href="{{ link.url }}"
            class="header__menu-item list-menu__item link link--text focus-inset"
            {% if link.current %}aria-current="page"{% endif %}
          >
            <span{% if link.current %} class="header__active-menu-item"{% endif %}>
              {{- link.title | escape -}}
            </span>
          </a>
        {%- endif -%}
      </li>
    {%- endfor -%}
  </ul>
</nav>

{% comment %} === MOBILE MEGA: templates generados desde los bloques === {% endcomment %}
<div id="mobile-mega-templates" hidden>
  {% for b in section.blocks %}
    {% if b.type == 'mega_config' %}
      {% assign trigger = b.settings.trigger_label | strip %}
      <template data-trigger="{{ trigger | escape }}">
        <div class="mobile-mega">
          <div class="mobile-mega__list">
            {% if b.settings.side_menu != blank and linklists[b.settings.side_menu] %}
              <ul>
                {% for l in linklists[b.settings.side_menu].links %}
                  <li><a href="{{ l.url }}" class="menu-drawer__menu-item link link--text list-menu__item focus-inset">{{ l.title }}</a></li>
                {% endfor %}
              </ul>
            {% else %}
              <ul></ul> 
            {% endif %}
          </div>
          <div class="mobile-mega__featured">
            {% assign handles = '' %}
            {% if b.settings.collection_1 != blank %}{% assign handles = handles | append: b.settings.collection_1 | append: ',' %}{% endif %}
            {% if b.settings.collection_2 != blank %}{% assign handles = handles | append: b.settings.collection_2 | append: ',' %}{% endif %}
            {% if b.settings.collection_3 != blank %}{% assign handles = handles | append: b.settings.collection_3 | append: ',' %}{% endif %}
            {% assign arr = handles | split: ',' %}
            {% for handle in arr %}
              {% if handle != blank %}
                {% assign c = collections[handle] %}
                {% if c %}
                  <a class="mobile-mega__card" href="{{ c.url }}">
                    <div class="mobile-mega__image-wrap">
                      {% if c.image %}
                        {{ c.image | image_url: width: 720 | image_tag: loading: 'lazy', widths: '360,540,720', sizes: '90vw', alt: c.title }}
                      {% else %}
                        {% assign fp = c.products | first %}
                        {% if fp and fp.featured_image %}
                          {{ fp.featured_image | image_url: width: 720 | image_tag: loading: 'lazy', widths: '360,540,720', sizes: '90vw', alt: c.title }}
                        {% else %}
                          <div class="mobile-mega__image-placeholder"></div>
                        {% endif %}
                      {% endif %}
                    </div>
                    <span class="mobile-mega__title">{{ c.title }}</span>
                  </a>
                {% endif %}
              {% endif %}
            {% endfor %}
          </div>
        </div>
      </template>
    {% endif %}
  {% endfor %}
</div>

<style>
    /*Estilos MOBILE*/
  @media (max-width: 990px){
    .mobile-mega-host{ padding-left: 12px; overflow:hidden; transition:max-height .24s ease; }
    .mobile-mega{ padding: 10px 0 18px; border-top: 1px solid rgba(0,0,0,.06); }
    .mobile-mega__list ul{ list-style:none; margin:0 0 8px 0; padding:0; }
    .mobile-mega__list li{ margin:0; }
    .mobile-mega__list a{ display:block; padding:10px 4px; text-decoration:none; }
    .mobile-mega__featured{ display:grid; grid-template-columns: 1fr; gap:14px; margin-top:6px; }
    .mobile-mega__card{ display:flex; flex-direction:column; gap:8px; text-decoration:none; color:inherit; }
    .mobile-mega__image-wrap{ aspect-ratio: 4/3; background:#f6f6f6; border-radius:0; overflow:hidden; }
    .mobile-mega__image-wrap img{ width:100%; height:100%; object-fit:cover; display:block; }
    .mobile-mega__image-placeholder{ width:100%; height:100%; background:linear-gradient(0deg,#f3f3f3,#fafafa); }
    .mobile-mega__title{ font-size:14px; }
  }
</style>


<style>


  /* El wrapper del mega de Dawn debe animar su altura */
  @media (min-width: 990px){
    .mega-menu__content{
      transition: height .26s ease;       
      max-height: calc(100vh - var(--header-height));
      overflow-y: auto;                   
    }
  }

  /* Paneles con transición (mantén lo que pusimos antes) */
  .optionB__panels{ position: relative; transition: height .24s ease; }
  .optionB__panel{
    position:absolute; inset:0; opacity:0; visibility:hidden;
    transform: translateY(6px); pointer-events:none;
    transition: opacity .22s ease, transform .22s ease, visibility 0s linear .22s;
  }
  .optionB__panel.is-active{
    opacity:1; visibility:visible; transform:translateY(0); pointer-events:auto;
    transition: opacity .22s ease, transform .22s ease;
  }
  /* ===== Barra de tabs (primer nivel bajo el header) ===== */
  {% comment %} .optionB__container{ padding:14px 0 22px; } {% endcomment %}
  .optionB__tabs{ border-bottom:1px solid rgba(0,0,0,.08); margin-bottom:16px; }
  .optionB__tabs-list{ list-style:none; margin:0; padding:0; display:flex; gap:28px; align-items:flex-end; }
  .optionB__tabs-item{ margin:0; }
  .optionB__tabs-link{
    display:inline-block; padding:10px 2px; text-decoration:none; position:relative; line-height:1.2;
  }
  .optionB__tabs-link.is-active::after{
    content:''; position:absolute; left:0; right:0; bottom:-1px; height:2px; background: currentColor;
  }

  /* ===== Panel (debajo de tabs) ===== */

  .optionB__panel{
    position: absolute;
    inset: 0;
    opacity: 0;
    visibility: hidden;
    transform: translateY(6px);
    pointer-events: none;
    transition: opacity .22s ease, transform .22s ease, visibility 0s linear .22s;
  }  
  .optionB__panel.is-active{
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    pointer-events: auto;
    transition: opacity .22s ease, transform .22s ease;
  }

  /* Grid PB dentro del panel */
  .megamenu-pb__grid{ display:grid; grid-template-columns: 280px 1fr; gap:24px; }
  .megamenu-pb__nav{ padding-right:24px; border-right:1px solid rgba(0,0,0,.08); max-height:54vh; overflow:auto; }
  .megamenu-pb__list{ list-style:none; padding:0; margin:0; }
  .megamenu-pb__item{ margin:0; }
  .megamenu-pb__link{ display:block; padding:10px 8px; text-decoration:none; font-size:15px; }
  .megamenu-pb__link:hover, .megamenu-pb__link:focus{ text-decoration:underline; }
  .megamenu-pb__featured{ display:grid; grid-template-columns: repeat(3, minmax(0,1fr)); gap:20px; }
  .megamenu-pb__card{ display:flex; flex-direction:column; gap:10px; text-decoration:none; color:inherit; }
  .megamenu-pb__image-wrap{ position:relative; aspect-ratio:16/20; overflow:hidden; border-radius:0; background:#f6f6f6; }
  .megamenu-pb__image-wrap img{ width:100%; height:100%; object-fit:cover; display:block; }
  .megamenu-pb__image-placeholder{ width:100%; height:100%; background:linear-gradient(0deg,#f3f3f3,#fafafa); }
  .megamenu-pb__title{ font-size:14px; line-height:1.3; }

  @media (max-width: 990px){
    .megamenu-pb__grid{ grid-template-columns: 1fr; }
    .megamenu-pb__featured{ grid-template-columns: 1fr; }
    .optionB__tabs-list{ gap:16px; flex-wrap:wrap; }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function(){
    document.querySelectorAll('.mega-menu').forEach(function(mega){
      var tabs   = mega.querySelectorAll('.optionB__tabs-link');
      var panels = mega.querySelectorAll('.optionB__panel');
      var wrap   = mega.querySelector('.optionB__panels');
      var content= mega.querySelector('.mega-menu__content');           // << nuevo
      var inner  = mega.querySelector('.optionB__container');           // << nuevo
      if(!tabs.length || !wrap || !content || !inner) return;

      function setHeights(activePanel){
        // Altura del bloque de paneles (para la animación interna)
        wrap.style.height = (activePanel ? activePanel.scrollHeight : wrap.scrollHeight) + 'px';
        // Altura total del mega (tabs + panel + paddings)
        var padTop    = parseFloat(getComputedStyle(content).paddingTop)  || 0;
        var padBottom = parseFloat(getComputedStyle(content).paddingBottom)|| 0;
        content.style.height = (inner.scrollHeight + padTop + padBottom) + 'px';
      }

      function activateTab(tab){
        var target = tab.getAttribute('data-panel');
        tabs.forEach(function(t){ t.classList.remove('is-active'); });
        tab.classList.add('is-active');

        panels.forEach(function(p){ p.classList.remove('is-active'); });
        var panel = mega.querySelector('#'+target);
        if(panel){
          panel.classList.add('is-active');
          setHeights(panel);

          // Recalcular después de pintar y tras cargar imágenes
          setTimeout(function(){ setHeights(panel); }, 50);
          setTimeout(function(){ setHeights(panel); }, 250);
          panel.querySelectorAll('img').forEach(function(img){
            img.addEventListener('load', function(){ setHeights(panel); }, { once: true });
          });
        }
      }

      // Inicializa alturas al abrir y al cargar
      var initial = mega.querySelector('.optionB__panel.is-active');
      if(initial) setHeights(initial);

      tabs.forEach(function(tab){
        var hasPanel = tab.getAttribute('data-has-panel') === 'true';
        if(hasPanel){
          tab.addEventListener('click',     function(e){ e.preventDefault(); activateTab(tab); });
          tab.addEventListener('mouseenter',function(){ activateTab(tab); });
          tab.addEventListener('focus',     function(){ activateTab(tab); });
        }
      });

      window.addEventListener('resize', function(){
        var current = mega.querySelector('.optionB__panel.is-active');
        setHeights(current);
      });

      mega.addEventListener('toggle', function(){
        if(mega.open){
          var current = mega.querySelector('.optionB__panel.is-active');
          setHeights(current);
        }
      });
    });
  });
</script>


<script>
  document.addEventListener('DOMContentLoaded', function(){
    var tmplRoot = document.getElementById('mobile-mega-templates');
    if(!tmplRoot) return;

    function normalize(s){ return (s||'').toString().trim().toLowerCase(); }

    // Delegación sobre clicks en el drawer
    document.body.addEventListener('click', function(e){
      // En Dawn, los items del drawer tienen la clase .menu-drawer__menu-item (a o button)
      var a = e.target.closest('a.menu-drawer__menu-item, button.menu-drawer__menu-item');
      if(!a) return;

      var label = normalize(a.textContent);
      var t = Array.from(tmplRoot.querySelectorAll('template')).find(function(t){
        return normalize(t.dataset.trigger) === label;
      });
      if(!t) return; // no hay mega config para este item → seguir navegación normal

      // Evita navegación para abrir el panel
      e.preventDefault();

      var li = a.closest('li');
      if(!li) return;

      // Toggle si ya existe
      var host = li.nextElementSibling;
      if(host && host.classList && host.classList.contains('mobile-mega-host')){
        var open = host.classList.toggle('is-open');
        host.style.maxHeight = open ? (host.scrollHeight + 'px') : '0';
        return;
      }

      // Crear host y clonar template
      host = document.createElement('div');
      host.className = 'mobile-mega-host is-open';
      li.parentNode.insertBefore(host, li.nextSibling);
      host.appendChild(t.content.cloneNode(true));

      // Fallback: si el template no traía lista, intenta leer nietos del drawer
      var listWrapper = host.querySelector('.mobile-mega__list ul');
      if(listWrapper && !listWrapper.children.length){
        var nestedList = li.querySelector('ul');
        if(nestedList){
          nestedList.querySelectorAll('a').forEach(function(n){
            var li2 = document.createElement('li');
            var a2 = document.createElement('a');
            a2.href = n.getAttribute('href');
            a2.textContent = n.textContent;
            a2.classList.add("menu-drawer__menu-item");
            li2.appendChild(a2);
            listWrapper.appendChild(li2);
          });
        }
      }

      // Animación de apertura
      host.style.maxHeight = host.scrollHeight + 'px';
    }, true);
  });
</script>
